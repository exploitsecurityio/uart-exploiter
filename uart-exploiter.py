#!/usr/bin/python3
# -*- coding: utf-8 -*-
# Author: Exploit Security Team
# Name: uart-exploiter
# Web: exploitsecurity.io
# Git Repo: https://github.com/exploitsecurityio/
# Function: Python UART toolkit for Security Researchers. To be used with standard FTDI cable. Interfaces with a connected UART peripheral and can be used for
# - Interactive UART passthrough over FTDI

from pyftdi.ftdi import Ftdi
import pyftdi.serialext
from pyftdi import FtdiLogger
from pyftdi.ftdi import Ftdi
from pyftdi.misc import to_bool
from pyftdi.serialext import serial_for_url
import sys
import os
import signal
import threading
from time import sleep
import re
import subprocess

global uart_interface
global baud_rate
global clr_cmd

def get_baud():
    try:
        while True:
            baud = (input("[Baud Rate]: "))
            if baud.isdigit():
                if len(baud) < 10:
                    return int(baud.strip())
                else:
                    print ("[Invalid Option]")
                    sleep(1)
                    return
            else:
                try:
                    return
                except EOFError:
                    return
    except EOFError:
        return
    except KeyboardInterrupt as e:
        print (e)
        return

def initialise_uart():
    try:
        device = str(Ftdi.list_devices())
        device_details = device.split(",")
        vid = (device_details[0].strip()[22:])
        pid = (device_details[1].strip())
        bus = (device_details[2].strip())
        address = (device_details[3].strip())
        sn = (device_details[4].strip()[4:-1])
        description = (device_details[6].strip()[:-1])
        interface = (device_details[7].strip()[:-2])
        uart_interface = ("ftdi://ftdi:232:"+sn+"/"+interface)
        return uart_interface
    except:
        print("[Unable to find UART interface]")
        sys.exit(0)

def banner():
    if os.name == 'posix':
        clr_cmd = ('clear')
    elif os.name == 'nt':
        clr_cmd = ('cls')
    os.system(clr_cmd)
    print("╦ ╦╔═╗╦═╗╔╦╗  ╔═╗─┐ ┬┌─┐┬  ┌─┐┬┌┬┐┌─┐┬─┐")
    print("║ ║╠═╣╠╦╝ ║   ║╣ ┌┴┬┘├─┘│  │ ││ │ ├┤ ├┬┘")
    print("╚═╝╩ ╩╩╚═ ╩   ╚═╝┴ └─┴  ┴─┘└─┘┴ ┴ └─┘┴└─")
    print("[by exploitsecurity.io]\n")

def menu(uart):
    try:
        while True:
            banner()
            print("      ╔╦╗┌─┐┌┐┌┬ ┬")
            print("+─────║║║├┤ ││││ │────+")
            print("|     ╩ ╩└─┘┘└┘└─┘    |")
            print("|    1. UART Connect  |")
            print("|    2. Quit          |")
            print("+─────────────────────+")
            option = int(input("[Option]: "))
            match option:
                case 1:
                    baud_rate = get_baud()    
                    try:
                        port = pyftdi.serialext.serial_for_url(uart, baudrate=baud_rate)
                        connect_status = port.is_open
                        if connect_status == True:
                            print("[Connected to UART]")
                            while True:
                                data = port.readline()
                                print (str(data.decode('ascii')), flush=True, end='')
                    except:
                        print ("[Unable to connect to FTDI]")
                        sleep(1)
                case 2:
                    print ("[Curiosity Drives Our Very Fabric]")
                    sys.exit(0)
                case _:
                    print ("[Invalid Option]")
                    sleep(1)
    except KeyboardInterrupt as e:
        print (e)
        print ("[Curiosity Drives Our Very Fabric]")
        return
    except ValueError:
        print ("[Curiosity Drives Our Very Fabric]")
        return

def main():
    uart_interface = initialise_uart()
    menu(uart_interface)

if __name__ == '__main__':
    main()
